--- a/scanner.c.orig	2012-01-22 04:28:03.000000000 +0400
+++ b/scanner.c	2012-03-16 11:45:11.000000000 +0400
@@ -155,7 +155,7 @@
 		}
 		else
 		{
-			strcpy(date_taken, _("Unknown Date"));
+			strcpy(date_taken, _("Неизвестная Дата"));
 		}
 		if( valid_cache && strcmp(last_date.name, date_taken) == 0 )
 		{
@@ -183,7 +183,7 @@
 		}
 		else
 		{
-			strcpy(camera, _("Unknown Camera"));
+			strcpy(camera, _("Неизвестная Камера"));
 		}
 		if( !valid_cache || strcmp(camera, last_cam.name) != 0 )
 		{
@@ -273,7 +273,7 @@
 				strcpy(last_artist.name, artist);
 				last_artistAlbum.name[0] = '\0';
 				/* Add this file to the "- All Albums -" container as well */
-				insert_container(_("- All Albums -"), last_artist.parentID, NULL, "album", artist, genre, NULL, &objectID, &parentID);
+				insert_container(_("- Все Альбомы -"), last_artist.parentID, NULL, "album", artist, genre, NULL, &objectID, &parentID);
 				sprintf(last_artistAlbumAll.parentID, "%s$%"PRIX64, last_artist.parentID, parentID);
 				last_artistAlbumAll.objectID = objectID;
 			}
@@ -281,18 +281,18 @@
 			{
 				last_artistAlbumAll.objectID++;
 			}
-			if( valid_cache && strcmp(album?album:_("Unknown Album"), last_artistAlbum.name) == 0 )
+			if( valid_cache && strcmp(album?album:_("Неизвестный Альбом"), last_artistAlbum.name) == 0 )
 			{
 				last_artistAlbum.objectID++;
 				//DEBUG DPRINTF(E_DEBUG, L_SCANNER, "Using last artist/album item: %s/%s/%X\n", last_artist.name, last_artist.parentID, last_artist.objectID);
 			}
 			else
 			{
-				insert_container(album?album:_("Unknown Album"), last_artist.parentID, album?last_album.parentID:NULL,
+				insert_container(album?album:_("Неизвестный Альбом"), last_artist.parentID, album?last_album.parentID:NULL,
 				                 "album.musicAlbum", artist, genre, album_art, &objectID, &parentID);
 				sprintf(last_artistAlbum.parentID, "%s$%"PRIX64, last_artist.parentID, parentID);
 				last_artistAlbum.objectID = objectID;
-				strcpy(last_artistAlbum.name, album?album:_("Unknown Album"));
+				strcpy(last_artistAlbum.name, album?album:_("Неизвестный Альбом"));
 				//DEBUG DPRINTF(E_DEBUG, L_SCANNER, "Creating cached artist/album item: %s/%s/%X\n", last_artist.name, last_artist.parentID, last_artist.objectID);
 			}
 			sql_exec(db, "INSERT into OBJECTS"
@@ -315,7 +315,7 @@
 				strcpy(last_genre.name, genre);
 				last_genreArtist.name[0] = '\0';
 				/* Add this file to the "- All Artists -" container as well */
-				insert_container(_("- All Artists -"), last_genre.parentID, NULL, "person", NULL, genre, NULL, &objectID, &parentID);
+				insert_container(_("- Все Исполнители -"), last_genre.parentID, NULL, "person", NULL, genre, NULL, &objectID, &parentID);
 				sprintf(last_genreArtistAll.parentID, "%s$%"PRIX64, last_genre.parentID, parentID);
 				last_genreArtistAll.objectID = objectID;
 			}
@@ -323,17 +323,17 @@
 			{
 				last_genreArtistAll.objectID++;
 			}
-			if( valid_cache && strcmp(artist?artist:_("Unknown Artist"), last_genreArtist.name) == 0 )
+			if( valid_cache && strcmp(artist?artist:_("Неизвестный Исполнитель"), last_genreArtist.name) == 0 )
 			{
 				last_genreArtist.objectID++;
 			}
 			else
 			{
-				insert_container(artist?artist:_("Unknown Artist"), last_genre.parentID, artist?last_artist.parentID:NULL,
+				insert_container(artist?artist:_("Неизвестный Исполнитель"), last_genre.parentID, artist?last_artist.parentID:NULL,
 				                 "person.musicArtist", NULL, genre, NULL, &objectID, &parentID);
 				sprintf(last_genreArtist.parentID, "%s$%"PRIX64, last_genre.parentID, parentID);
 				last_genreArtist.objectID = objectID;
-				strcpy(last_genreArtist.name, artist?artist:_("Unknown Artist"));
+				strcpy(last_genreArtist.name, artist?artist:_("Неизвестный Исполнитель"));
 				//DEBUG DPRINTF(E_DEBUG, L_SCANNER, "Creating cached genre/artist item: %s/%s/%X\n", last_genreArtist.name, last_genreArtist.parentID, last_genreArtist.objectID);
 			}
 			sql_exec(db, "INSERT into OBJECTS"
@@ -536,25 +536,25 @@
 {
 	int ret, i;
 	const char * containers[] = { "0","-1",   "root",
-	                         MUSIC_ID, "0", _("Music"),
-	                     MUSIC_ALL_ID, MUSIC_ID, _("All Music"),
-	                   MUSIC_GENRE_ID, MUSIC_ID, _("Genre"),
-	                  MUSIC_ARTIST_ID, MUSIC_ID, _("Artist"),
-	                   MUSIC_ALBUM_ID, MUSIC_ID, _("Album"),
-	                     MUSIC_DIR_ID, MUSIC_ID, _("Folders"),
-	                   MUSIC_PLIST_ID, MUSIC_ID, _("Playlists"),
-
-	                         VIDEO_ID, "0", _("Video"),
-	                     VIDEO_ALL_ID, VIDEO_ID, _("All Video"),
-	                     VIDEO_DIR_ID, VIDEO_ID, _("Folders"),
-
-	                         IMAGE_ID, "0", _("Pictures"),
-	                     IMAGE_ALL_ID, IMAGE_ID, _("All Pictures"),
-	                    IMAGE_DATE_ID, IMAGE_ID, _("Date Taken"),
-	                  IMAGE_CAMERA_ID, IMAGE_ID, _("Camera"),
-	                     IMAGE_DIR_ID, IMAGE_ID, _("Folders"),
+	                         MUSIC_ID, "0", _("Музыка"),
+	                     MUSIC_ALL_ID, MUSIC_ID, _("Вся Музыка"),
+	                   MUSIC_GENRE_ID, MUSIC_ID, _("Жанр"),
+	                  MUSIC_ARTIST_ID, MUSIC_ID, _("Исполнитель"),
+	                   MUSIC_ALBUM_ID, MUSIC_ID, _("Альбом"),
+	                     MUSIC_DIR_ID, MUSIC_ID, _("Папки"),
+	                   MUSIC_PLIST_ID, MUSIC_ID, _("Списки Воспроизведения"),
+
+	                         VIDEO_ID, "0", _("Видео"),
+	                     VIDEO_ALL_ID, VIDEO_ID, _("Всё Видео"),
+	                     VIDEO_DIR_ID, VIDEO_ID, _("Папки"),
+
+	                         IMAGE_ID, "0", _("Фотографии"),
+	                     IMAGE_ALL_ID, IMAGE_ID, _("Все Фотографии"),
+	                    IMAGE_DATE_ID, IMAGE_ID, _("Дата Съёмки"),
+	                  IMAGE_CAMERA_ID, IMAGE_ID, _("Камера"),
+	                     IMAGE_DIR_ID, IMAGE_ID, _("Папки"),
 
-	                     BROWSEDIR_ID, "0", _("Browse Folders"),
+	                     BROWSEDIR_ID, "0", _("Просмотреть Папки"),
 			0 };
 
 	ret = sql_exec(db, "CREATE TABLE OBJECTS ( "
 
