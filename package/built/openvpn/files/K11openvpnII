#!/bin/sh

MOUNTPNT="/media/DISK_A1"
MOUNT="$MOUNTPNT/system"

export PATH=$MOUNT/bin:$MOUNT/sbin:$MOUNT/usr/bin:$MOUNT/usr/sbin:/sbin:/usr/sbin:/bin:/usr/bin
export LD_LIBRARY_PATH=$MOUNT/lib:$MOUNT/usr/lib:/lib:/usr/lib

success() {
	[ -n $1 ] && echo "success" || echo "$1: success"
}

failure() {
	[ -n $1 ] && echo "failed" || echo "$1: failed"
}

start() {
	echo ""
	echo "Loading OpenVPN kernel modules:"
	insmod $MOUNT/lib/modules/2.6.22-tc/tun.ko
	
	# Make sure IP forwarding is enabled
	echo 1 > /proc/sys/net/ipv4/ip_forward
	# Proxy arp usuaslly is not needed
#	echo 1 > /proc/sys/net/ipv4/conf/br0/proxy_arp
	
	# Make device if not present (not devfs)
	if ( [ ! -c /dev/net/tun ] ) then
		# Make /dev/net directory if needed
		if ( [ ! -d /dev/net ] ) then
			mkdir -m 755 /dev/net
		fi
		mknod /dev/net/tun c 10 200
	fi

	echo ""
	echo -n "Starting OpenVPN in daemon mode...."
	$MOUNT/usr/sbin/openvpn --cd $MOUNT/etc/openvpn --daemon --script-security 2 --config openvpn.conf > /dev/null 2>&1
	ret=$?
	[ $ret -eq 0 ] && success || failure
}

stop() {
	
	echo ""
	echo -n "Killing OpenVPN processes...."
	if [ -n "`pidof openvpn`" ]; then 
		killall openvpn 2>/dev/null
	fi
	ret=$?
	[ $ret -eq 0 ] && success || failure
	
	sleep 1

	echo ""
	echo "Unloading OpenVPN kernel modules... "
	rmmod tun
}

restart() {
	stop
	sleep 3
	start
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	link_up)
		;;
	ppp_up)
		;;
	link_down)
		;;
	ppp_down)
		;;
	*)
		echo "Usage: $0 {start|stop|restart|link_up|link_down|ppp_up|ppp_down}"
		;;
esac
